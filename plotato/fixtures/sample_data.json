[{"pk": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "model": "projects.project", "fields": {"created": "2012-06-29T20:09:28.682Z", "name": "Projekt 1", "description": "This is the first project."}}, {"pk": "5de36362-c226-11e1-877f-001f29a3c04e", "model": "projects.project", "fields": {"created": "2012-06-29T20:09:43.758Z", "name": "Project 2", "description": "This is the second project."}}, {"pk": "671ce28c-c226-11e1-961f-001f29a3c04e", "model": "projects.project", "fields": {"created": "2012-06-29T20:09:59.233Z", "name": "Project 3", "description": "This is the third project."}}, {"pk": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "model": "projects.project", "fields": {"created": "2012-06-29T20:10:18.099Z", "name": "Project 4", "description": "This is the fourth project."}}, {"pk": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "model": "projects.project", "fields": {"created": "2012-06-29T20:10:33.036Z", "name": "Project 5", "description": "This is the fifth project."}}, {"pk": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "model": "projects.project", "fields": {"created": "2012-06-29T20:11:00.919Z", "name": "Project 6", "description": "This is the sixth project."}}, {"pk": "60a189c0-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "5de36362-c226-11e1-877f-001f29a3c04e", "created": "2012-06-29T20:16:57.860Z", "name": "Test1", "description": "This is a test"}}, {"pk": "60b9bd10-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "5de36362-c226-11e1-877f-001f29a3c04e", "created": "2012-06-29T20:16:58.013Z", "name": "Test1", "description": "This is a test"}}, {"pk": "60ccf088-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "5de36362-c226-11e1-877f-001f29a3c04e", "created": "2012-06-29T20:16:58.139Z", "name": "Test1", "description": "This is a test"}}, {"pk": "60dede1a-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "5de36362-c226-11e1-877f-001f29a3c04e", "created": "2012-06-29T20:16:58.256Z", "name": "Test1", "description": "This is a test"}}, {"pk": "60f0d002-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "5de36362-c226-11e1-877f-001f29a3c04e", "created": "2012-06-29T20:16:58.374Z", "name": "Test1", "description": "This is a test"}}, {"pk": "6102c140-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "671ce28c-c226-11e1-961f-001f29a3c04e", "created": "2012-06-29T20:16:58.492Z", "name": "Test2", "description": "This is a test"}}, {"pk": "611626b8-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "671ce28c-c226-11e1-961f-001f29a3c04e", "created": "2012-06-29T20:16:58.619Z", "name": "Test2", "description": "This is a test"}}, {"pk": "612a9ec2-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "671ce28c-c226-11e1-961f-001f29a3c04e", "created": "2012-06-29T20:16:58.753Z", "name": "Test2", "description": "This is a test"}}, {"pk": "613f1b04-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "671ce28c-c226-11e1-961f-001f29a3c04e", "created": "2012-06-29T20:16:58.887Z", "name": "Test2", "description": "This is a test"}}, {"pk": "6154e1f0-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "671ce28c-c226-11e1-961f-001f29a3c04e", "created": "2012-06-29T20:16:59.030Z", "name": "Test2", "description": "This is a test"}}, {"pk": "61695d88-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "created": "2012-06-29T20:16:59.164Z", "name": "Test3", "description": "This is a test"}}, {"pk": "617c9218-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "created": "2012-06-29T20:16:59.290Z", "name": "Test3", "description": "This is a test"}}, {"pk": "618fc9a0-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "created": "2012-06-29T20:16:59.416Z", "name": "Test3", "description": "This is a test"}}, {"pk": "61a2fe62-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "created": "2012-06-29T20:16:59.542Z", "name": "Test3", "description": "This is a test"}}, {"pk": "61b66358-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "created": "2012-06-29T20:16:59.669Z", "name": "Test3", "description": "This is a test"}}, {"pk": "61cd6828-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "created": "2012-06-29T20:16:59.820Z", "name": "Test4", "description": "This is a test"}}, {"pk": "61e32622-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "created": "2012-06-29T20:16:59.962Z", "name": "Test4", "description": "This is a test"}}, {"pk": "61f8eea8-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "created": "2012-06-29T20:17:00.105Z", "name": "Test4", "description": "This is a test"}}, {"pk": "620d63ba-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "created": "2012-06-29T20:17:00.239Z", "name": "Test4", "description": "This is a test"}}, {"pk": "62209b9c-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "created": "2012-06-29T20:17:00.365Z", "name": "Test4", "description": "This is a test"}}, {"pk": "6233ce24-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "created": "2012-06-29T20:17:00.491Z", "name": "Test5", "description": "This is a test"}}, {"pk": "624705b6-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "created": "2012-06-29T20:17:00.617Z", "name": "Test5", "description": "This is a test"}}, {"pk": "625a3b7c-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "created": "2012-06-29T20:17:00.743Z", "name": "Test5", "description": "This is a test"}}, {"pk": "6270284c-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "created": "2012-06-29T20:17:00.886Z", "name": "Test5", "description": "This is a test"}}, {"pk": "6285f140-c227-11e1-a031-001f29a3c04e", "model": "projects.test", "fields": {"project": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "created": "2012-06-29T20:17:01.029Z", "name": "Test5", "description": "This is a test"}}, {"pk": "78b7a008-c227-11e1-9fe4-001f29a3c04e", "model": "projects.test", "fields": {"project": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "created": "2012-06-29T20:17:38.265Z", "name": "Test 2", "description": "This is a test."}}, {"pk": "9b100898-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:53:05.581Z", "code": "from pylab import *\r\n\r\n# two images x1 is initially visible, x2 is not\r\nx1 = rand(100, 100)\r\nx2 = rand(150, 175)\r\n\r\n# arbitrary extent - both images must have same extent if you want\r\n# them to be resampled into the same axes space\r\nextent = (0,1,0,1)\r\nim1 = imshow(x1, extent=extent)\r\nim2 = imshow(x2, extent=extent, hold=True)\r\nim2.set_visible(False)\r\n\r\ndef toggle_images(event):\r\n    'toggle the visible state of the two images'\r\n    if event.key != 't': return\r\n    b1 = im1.get_visible()\r\n    b2 = im2.get_visible()\r\n    im1.set_visible(not b1)\r\n    im2.set_visible(not b2)\r\n    draw()\r\n\r\nconnect('key_press_event', toggle_images)", "name": "Plot 1", "created": "2012-06-29T20:18:35.934Z", "project": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9b2b63d6-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:36.105Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 2", "created": "2012-06-29T20:18:36.105Z", "project": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9b43b062-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:36.264Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 3", "created": "2012-06-29T20:18:36.264Z", "project": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9b5bfdca-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:36.423Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 4", "created": "2012-06-29T20:18:36.423Z", "project": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9b7595b4-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:36.593Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 5", "created": "2012-06-29T20:18:36.593Z", "project": "54e6fa76-c226-11e1-a1a3-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9b906d4e-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:46:37.804Z", "code": "import matplotlib\r\nimport matplotlib.pyplot\r\nfrom pylab import figure\r\nimport numpy as np\r\n\r\nax1 = fig.add_subplot(111)\r\nt = np.arange(0.01, 10.0, 0.01)\r\ns1 = np.exp(t)\r\nax1.plot(t, s1, 'b-')\r\nax1.set_xlabel('time (s)')\r\n# Make the y-axis label and tick labels match the line color.\r\nax1.set_ylabel('exp', color='b')\r\nfor tl in ax1.get_yticklabels():\r\n    tl.set_color('b')\r\n\r\n\r\nax2 = ax1.twinx()\r\ns2 = np.sin(2*np.pi*t)\r\nax2.plot(t, s2, 'r.')\r\nax2.set_ylabel('sin', color='r')\r\nfor tl in ax2.get_yticklabels():\r\n    tl.set_color('r')", "name": "Plot 1", "created": "2012-06-29T20:18:36.767Z", "project": "5de36362-c226-11e1-877f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9bac9294-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:36.951Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 2", "created": "2012-06-29T20:18:36.952Z", "project": "5de36362-c226-11e1-877f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9bc8b50a-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:37.136Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 3", "created": "2012-06-29T20:18:37.136Z", "project": "5de36362-c226-11e1-877f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9be24808-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:37.303Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 4", "created": "2012-06-29T20:18:37.303Z", "project": "5de36362-c226-11e1-877f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9bfc084c-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:37.472Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 5", "created": "2012-06-29T20:18:37.472Z", "project": "5de36362-c226-11e1-877f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9c159ffa-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:46:59.900Z", "code": "import numpy as np\r\nfrom matplotlib import cm, colors\r\nfrom numpy import ma\r\n\r\nn = 12\r\nx = np.linspace(-1.5,1.5,n)\r\ny = np.linspace(-1.5,1.5,n*2)\r\nX,Y = np.meshgrid(x,y);\r\nQx = np.cos(Y) - np.cos(X)\r\nQz = np.sin(Y) + np.sin(X)\r\nQx = (Qx + 1.1)\r\nZ = np.sqrt(X**2 + Y**2)/5;\r\nZ = (Z - Z.min()) / (Z.max() - Z.min())\r\n\r\n# The color array can include masked values:\r\nZm = ma.masked_where(np.fabs(Qz) < 0.5*np.amax(Qz), Z)\r\n\r\nax = fig.add_subplot(121)\r\nax.set_axis_bgcolor(\"#bdb76b\")\r\nax.pcolormesh(Qx,Qz,Z, shading='gouraud')\r\nax.set_title('Without masked values')\r\n\r\nax = fig.add_subplot(122)\r\nax.set_axis_bgcolor(\"#bdb76b\")\r\n#  You can control the color of the masked region:\r\n#cmap = cm.jet\r\n#cmap.set_bad('r', 1.0)\r\n#ax.pcolormesh(Qx,Qz,Zm, cmap=cmap)\r\n#  Or use the default, which is transparent:\r\ncol = ax.pcolormesh(Qx,Qz,Zm,shading='gouraud')\r\nax.set_title('With masked values')", "name": "Plot 1", "created": "2012-06-29T20:18:37.640Z", "project": "671ce28c-c226-11e1-961f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9c2f30dc-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:37.807Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 2", "created": "2012-06-29T20:18:37.807Z", "project": "671ce28c-c226-11e1-961f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9c4b4fce-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:37.997Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 3", "created": "2012-06-29T20:18:37.998Z", "project": "671ce28c-c226-11e1-961f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9c662d4e-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:38.168Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 4", "created": "2012-06-29T20:18:38.168Z", "project": "671ce28c-c226-11e1-961f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9c824a56-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:38.352Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 5", "created": "2012-06-29T20:18:38.352Z", "project": "671ce28c-c226-11e1-961f-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9c9e67f4-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:51:09.799Z", "code": "from matplotlib.dates import strpdate2num\r\n#from matplotlib.mlab import load\r\nimport numpy as np\r\nfrom pylab import figure, show\r\nimport matplotlib.cbook as cbook\r\n\r\ndatafile = cbook.get_sample_data('msft.csv', asfileobj=False)\r\nprint 'loading', datafile\r\n\r\ndates, closes = np.loadtxt(\r\n    datafile, delimiter=',',\r\n    converters={0:strpdate2num('%d-%b-%y')},\r\n    skiprows=1, usecols=(0,2), unpack=True)\r\n\r\nax = fig.add_subplot(111)\r\nax.plot_date(dates, closes, '-')\r\nfig.autofmt_xdate()", "name": "Plot 1", "created": "2012-06-29T20:18:38.536Z", "project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9cba85d8-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:38.721Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 2", "created": "2012-06-29T20:18:38.721Z", "project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9cd448ba-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:38.890Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 3", "created": "2012-06-29T20:18:38.890Z", "project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9cedddc0-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:39.057Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 4", "created": "2012-06-29T20:18:39.057Z", "project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9d07712c-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:39.225Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 5", "created": "2012-06-29T20:18:39.225Z", "project": "725b7ca8-c226-11e1-88dc-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9d2108a8-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:52:22.781Z", "code": "from pylab import *\r\n\r\nt = arange(0.0, 2.0, 0.01)\r\ns = sin(2*pi*t)\r\nplot(t, s, linewidth=1.0)\r\n\r\nxlabel('time (s)')\r\nylabel('voltage (mV)')\r\ntitle('About as simple as it gets, folks')\r\ngrid(True)", "name": "Plot 1", "created": "2012-06-29T20:18:39.392Z", "project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9d3d2bfa-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:39.577Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 2", "created": "2012-06-29T20:18:39.577Z", "project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9d5a91a4-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:39.770Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 3", "created": "2012-06-29T20:18:39.770Z", "project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9d76b014-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:39.954Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 4", "created": "2012-06-29T20:18:39.954Z", "project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "9d91be9a-c227-11e1-a031-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:18:40.131Z", "code": "f = figure(figsize=(3,3))", "name": "Plot 5", "created": "2012-06-29T20:18:40.131Z", "project": "7b42b8b8-c226-11e1-b970-001f29a3c04e", "error": "", "description": "This is a plot"}}, {"pk": "a9f36814-c227-11e1-9cf7-001f29a3c04e", "model": "projects.plot", "fields": {"updated": "2012-06-29T20:49:42.095Z", "code": "from matplotlib import pyplot as plt\r\nimport numpy as np\r\nfrom numpy import ma\r\nfrom matplotlib import colors, ticker\r\nfrom matplotlib.mlab import bivariate_normal\r\n\r\nN = 100\r\nx = np.linspace(-3.0, 3.0, N)\r\ny = np.linspace(-2.0, 2.0, N)\r\n\r\nX, Y = np.meshgrid(x, y)\r\n\r\n# A low hump with a spike coming out of the top right.\r\n# Needs to have z/colour axis on a log scale so we see both hump and spike.\r\n# linear scale only shows the spike.\r\nz = (bivariate_normal(X, Y, 0.1, 0.2, 1.0, 1.0)\r\n        + 0.1 * bivariate_normal(X, Y, 1.0, 1.0, 0.0, 0.0))\r\n\r\n# Put in some negative values (lower left corner) to cause trouble with logs:\r\nz[:5, :5] = -1\r\n\r\n# The following is not strictly essential, but it will eliminate\r\n# a warning.  Comment it out to see the warning.\r\nz = ma.masked_where(z<= 0, z)\r\n\r\n\r\n# Automatic selection of levels works; setting the\r\n# log locator tells contourf to use a log scale:\r\ncs = plt.contourf(X, Y, z, locator=ticker.LogLocator())\r\n\r\n# Alternatively, you can manually set the levels\r\n# and the norm:\r\n#lev_exp = np.arange(np.floor(np.log10(z.min())-1),\r\n#                       np.ceil(np.log10(z.max())+1))\r\n#levs = np.power(10, lev_exp)\r\n#cs = P.contourf(X, Y, z, levs, norm=colors.LogNorm())\r\n\r\n#The 'extend' kwarg does not work yet with a log scale.\r\n\r\nf = plt.colorbar()\r\n", "name": "Plot 1", "created": "2012-06-29T20:19:00.910Z", "project": "8be16e30-c226-11e1-9d2e-001f29a3c04e", "error": "", "description": "This is a plot."}}]